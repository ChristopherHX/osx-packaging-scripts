name: CI
on:
  push:
    branches:
      - '*'
    tags-ignore:
      - '*'
jobs:
  build:
    runs-on: macos-latest
    steps:
    - name: Set Environment Variables
      run: |
        IFS='/' read -ra REPO <<< "${GITHUB_REPOSITORY}"
        echo "::set-env REPO_USER=${REPO[0]}"
        echo "::set-env REPO_NAME=${REPO[1]}"
        IFS='/' read -ra REF <<< "${GITHUB_REF}"
        echo "::set-env BRANCH_NAME=${REF[2]}"
    - uses: actions/checkout@v1
    - name: Apply custom patch and Update brew
      working-directory: "/usr/local/Homebrew"
      run: |
        git remote add fork https://github.com/ChristopherHX/brew.git
        git fetch fork
        git config --global user.email "CI@local"
        git config --global user.name "CI Bot"
        git checkout fork/master
    - name: Install brew dependencies / Download QT
      working-directory: ${{ github.workspace }}/../osx-packaging-scripts
      run: |
        # Start Qt download parallel to save time
        ./download_qt.sh &
        PID=$!
        export HOMEBREW_MACOSX_DEPLOYMENT_TARGET=10.12.0
        export HOMEBREW_SDKROOT=/Applications/Xcode_10.3.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.14.sdk
        HOMEBREW_NO_AUTO_UPDATE=1 brew reinstall python libzip
        HOMEBREW_NO_AUTO_UPDATE=1 brew install p7zip libuv protobuf
        # Wait for QT Download, it is faster than brew
        wait $PID
    - uses: actions/setup-python@v1
      with:
        python-version: '3.x' # Version range or exact version of a Python version to use, using semvers version range syntax.
        architecture: 'x64' # optional x64 or x86. Defaults to x64 if not specified
    - uses: actions/setup-python@v1
      with:
        python-version: '2.x' # Version range or exact version of a Python version to use, using semvers version range syntax.
        architecture: 'x64' # optional x64 or x86. Defaults to x64 if not specified  
    - name: Install python dependencies
      run: python3 -m pip install --upgrade pip && pip3 install jinja2 ds_store
    - name: Build
      working-directory: ${{ github.workspace }}/../osx-packaging-scripts
      run: |
        export MACOSX_DEPLOYMENT_TARGET=10.12
        export SDKROOT=/Applications/Xcode_10.3.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.14.sdk
        python3 __main__.py --qt-path qt/*/*/ --update-url https://github.com/${GITHUB_REPOSITORY}/releases/download/ng.dmg/version.osx --build-id ${GITHUB_RUN_NUMBER}
    - name: Build .dmg
      working-directory: ${{ github.workspace }}/../osx-packaging-scripts
      run: python3 build_dmg.py
    - name: Upload Latest
      run: |
        mkdir -p dist
        mv "${{ github.workspace }}/../osx-packaging-scripts/output/Minecraft Bedrock Launcher.dmg" dist/Minecraft_Bedrock_Launcher.dmg
        echo build_id=${GITHUB_RUN_NUMBER}$'\n'download_url=https://github.com/${GITHUB_REPOSITORY}/releases/download/${BRANCH_NAME:-UNKNOWN}.dmg/Minecraft_Bedrock_Launcher.dmg > dist/version.osx
        curl -L https://github.com/tcnksm/ghr/releases/download/v0.13.0/ghr_v0.13.0_darwin_amd64.zip --output ghr.zip
        unzip ghr.zip
        ./ghr*/ghr -t ${{ secrets.GITHUB_TOKEN }} -u ${REPO_USER} -r ${REPO_NAME} -recreate -prerelease -b "# NO SUPPORT THIS IS A TEST RELEASE" "${BRANCH_NAME:-UNKNOWN}".dmg dist/
